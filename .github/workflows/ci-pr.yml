name: CI on PR/Merge

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_CONFIGURATION: 'Release'
  NUGET_FEED: 'https://nuget.pkg.github.com/hypertherm/index.json'
  NUGET_PACK_PATH: './nuget-output'

jobs:
  build:

    runs-on: windows-latest

    steps:

    - name: Checkout Repo
      id: checkout
      uses: actions/checkout@main
      with:
        fetch-depth: 0

      # Use GitVersion to setup versioning for package details
    - name: Install GitVersion # From here: https://github.com/GitTools/actions
      id: install_gitversion
      uses: gittools/actions/gitversion/setup@v0.9.9
      with:
          versionSpec: '5.6.7'

    - name: Generate Version Number with GitVersion
      id: gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v0.9.9
      with:
        useConfigFile: true

    - name: Print GitVersion computed
      id: artifactoryversion
      outputs:
        nuGetVersion:
          description: 'Version number to use based on current Artifactory limitations: {Major}.{Minor}.{Patch}{PrePreleaseNumber}'
      run: |
        echo "LegacySemVer: ${{ steps.gitversion.outputs.legacySemVer }}"
        echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
        echo "MajorMinorPrerelease": ${{steps.gitversion.outputs.Major}}.${{steps.gitversion.outputs.Minor}}.${{steps.gitversion.outputs.Patch}}${{steps.gitversion.outputs.PreReleaseNumber}}"
        echo "::set-output name=nuGetVersion::${{steps.gitversion.outputs.Major}}.${{steps.gitversion.outputs.Minor}}.${{steps.gitversion.outputs.Patch}}${{steps.gitversion.outputs.PreReleaseNumber}}"

      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Install dependencies
      id: restore_dependencies
      run: dotnet restore

    - name: Build
      id: dotnet_build
      run: dotnet build --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore -p:Version="${{ steps.artifactoryversion.outputs.nuGetVersion }}"

    - name: Test
      id: unit_test
      run: dotnet test --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore --no-build --verbosity normal

    - name: Create package
      id: nuget_pack
      run: dotnet pack --configuration ${{ env.BUILD_CONFIGURATION }} -o ${{ env.NUGET_PACK_PATH }} --no-restore --no-build -p:Version=${{ steps.artifactoryversion.outputs.nuGetVersion }}

    - name: Archive NuGets artifacts
      id: archive_nugets
      uses: actions/upload-artifact@main
      with:
        name: NuGet-Packages
        path: ${{ env.NUGET_PACK_PATH }}

    - name: Push generated package to GitHub Packages
      id: nuget_push_github_packages
      run: |
        ls "**/*.nupkg"
        dotnet nuget add source ${{ env.NUGET_FEED }} -n hypertherm-org-github -u hypertherm -p ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text
        dotnet nuget push "**/*.nupkg" --source hypertherm-org-github --skip-duplicate --no-symbols true -k ${{ secrets.GITHUB_TOKEN }}
